// Rem output with px fallback
@mixin font-size($sizeValue: 1) {
  font-size: $sizeValue + px;
  font-size: ($sizeValue / 10) + rem;
}

// Center block
@mixin center-block {
	display: block;
	margin-left: auto;
	margin-right: auto;
}

// Clearfix
@mixin clearfix() {
	content: "";
	display: table;
}

// Clear after (not all clearfix need this also)
@mixin clearfix-after() {
	clear: both;
}

// Mixin used to generate colour-coding for top-level categories
@mixin generate-category-colours($slug, $color) {
  .category-intro.#{$slug} h1,
  .category-intro.#{$slug} a,
  .category.category-#{$slug} h2 a,
  .category.category-#{$slug} .prev_next a,
  .category.category-#{$slug} .entry-content p:not(.read-more) a {
    color: $color;
  }

  .category-intro.#{$slug} a:hover,
  .category.category-#{$slug} h2 a:hover,
  .category.category-#{$slug} .prev_next a:hover,
  .category.category-#{$slug} .entry-content p:not(.read-more) a:hover {
    color: darken($color, 10%);
  }

  .category.category-#{$slug} .read-more a {
    background-color: $color;
  }

  .category.category-#{$slug} .read-more:hover a {
    background-color: darken($color, 10%);
  }

  .home .#{$slug} h3 {
    background-color: $color;
    outline-color: $color;
  }

  .home .#{$slug}:hover h3 {
    background-color: darken($color, 10%);
    outline-color: darken($color, 10%);
  }
}

// Mixin used to generate series styling on Shopping Guides page
@mixin generate-series-styles($slug, $color) {
  &.#{$slug} {
    background-image: url('series/#{$slug}/#{$slug}-title-image.jpg');

    h2, .read-more a {
      background-color: $color;
    }

    &:hover h2, &:hover .read-more a {
      background-color: darken($color, 10%);
    }
  }
}
